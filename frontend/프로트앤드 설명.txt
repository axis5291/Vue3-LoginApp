1.vue.config.js에서 프록시 설정을 하였다.
이것을 안하면 cors 이슈가 생겨 백엔드 서버에 접근을 못하게 된다.

뷰의 기본 구조 설명
<script>

import { reactive, ref } from "vue";    /* 1️⃣ 필요한 라이브러리 가져오기 (Vue의 reactive와 ref 함수) */
import axios from "axios";               /* axios 라이브러리 가져오기 */

/* 2️⃣ export default: Vue 컴포넌트를 정의 (setup 함수 내에서 사용하는 변수와 함수 정의) */
export default {
  setup() {
   
    const state = reactive({        // 3️⃣ 상태 관리 (데이터): reactive는 상태를 반응형으로 관리
      message: "안녕하세요, Vue!",
      count: 0,
    });

  
    const increment = () => {       // 4️⃣ 함수 (메서드): 상태를 변경하는 함수
      state.count++;                // count 값을 증가시키는 함수
    };

    return { state, increment };    // 5️⃣ return: template에서 사용할 변수(state)와 함수(increment)를 반환
  }, // setup()은 함수 선언이기 때문에 함수 정의 후 세미콜론을 붙이지 않음.
};
</script>

새미콜론을 붙이는 상황===================================================================================================

세미콜론을 붙여야 하는 상황에 대해 더 자세히 설명드리면 다음과 같습니다:

1. 변수 선언 :const, let, var로 선언된 변수에는 세미콜론을 붙입니다.

  const name = "John";  // 세미콜론
  let age = 25;         // 세미콜론
  var city = "Seoul";    // 세미콜론

2. 문장 끝:모든 문장(statement) 은 세미콜론으로 끝나야 합니다. 
          return, if, for, while 등 대부분의 문장 끝에는 세미콜론을 붙여야 합니다.

  return "Hello, world!";  // 세미콜론 필요

  if (true) {               // 조건문 뒤에 중괄호 사용
    console.log("Hello!");
  } // 세미콜론 필요 없음, 하지만 문장은 필요
  for (let i = 0; i < 5; i++) {  // 세미콜론
    console.log(i);
  }

3. 객체 리터럴:객체 리터럴에서 마지막 프로퍼티 뒤에는 세미콜론을 붙이지 않아도 됩니다. 하지만 객체 자체를 할당하거나 리턴할 때에는 세미콜론을 붙여야 합니다.

  const person = {
    name: "Alice",
    age: 30
  };  // 세미콜론 필요 (객체를 변수에 할당하는 경우)

  const greet = () => {         // 세미콜론 필요
    return { name: "Bob", age: 25 };
  };  

 4. 클래스, 함수 정의 후:클래스나 함수 정의는 세미콜론이 필요 없지만, 클래스나 함수 자체를 값으로 할당할 때에는 세미콜론을 붙여야 합니다.

  class Person {
    constructor(name, age) {
      this.name = name;
      this.age = age;
    }
  }  // 세미콜론 필요 없음

  const myFunction = function() {  // 세미콜론
    return "Hello!";
  }; 

5. 조건부 연산자 (Ternary Operator):삼항 연산자에서 결과값이 표현식인 경우에는 세미콜론을 붙여야 합니다.

const result = (age > 18) ? "Adult" : "Child";  // 세미콜론 필요

6. 배열 및 함수 선언:배열이나 함수 선언 자체에는 세미콜론이 필요 없지만, 배열을 변수에 할당하거나 함수 호출 뒤에는 세미콜론을 붙여야 합니다.

  const arr = [1, 2, 3];  // 세미콜론 필요
  function greet() {
    console.log("Hello");
  }  // 세미콜론 필요 없음

7. 즉시 실행 함수 표현식 (IIFE):즉시 실행 함수 표현식에서는 세미콜론을 꼭 붙여야 합니다.


  (function() {
    console.log("Executed immediately!");
  })();  // 세미콜론 필요

